<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gov.va.api.health</groupId>
    <artifactId>service-starter</artifactId>
    <version>2.0.6</version>
    <relativePath/>
  </parent>
  <artifactId>community-care-eligibility</artifactId>
  <version>1.0.42-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <ee-artifacts.version>1.1.44</ee-artifacts.version>
    <jacoco.coverage>0.87</jacoco.coverage>
  </properties>
  <dependencies>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>service-auto-config</artifactId>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>community-care-eligibility-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>hand-of-queen-elizabeth</artifactId>
      <version>${ee-artifacts.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>ee-artifacts</artifactId>
      <version>${ee-artifacts.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>swagger</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>community-care-eligibility-api</artifactId>
                  <version>${project.version}</version>
                  <type>yaml</type>
                  <classifier>openapi</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/swagger</outputDirectory>
                  <destFileName>openapi.yaml</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-some-swagger</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/swagger</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>conformance-timestamp</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <configuration>
              <name>conformance.publication-date</name>
              <pattern>yyyy-MM-dd'T'HH:mm:ss'Z'</pattern>
              <timeZone>UTC</timeZone>
              <locale>en_US</locale>
              <unit>second</unit>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>build-test</id>
                <configuration>
                  <images>
                    <image>
                      <name>${docker.organization}/community-care-tests</name>
                      <build>
                        <dockerFile>Dockerfile</dockerFile>
                        <tags>
                          <tag>${project.version}</tag>
                          <tag>${docker.tag}</tag>
                        </tags>
                      </build>
                    </image>
                  </images>
                </configuration>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>deploy-test</id>
                <configuration>
                  <images>
                    <image>
                      <name>${docker.organization}/community-care-tests</name>
                      <build>
                        <dockerFile>Dockerfile</dockerFile>
                        <tags>
                          <tag>${project.version}</tag>
                          <tag>${docker.tag}</tag>
                        </tags>
                      </build>
                    </image>
                  </images>
                </configuration>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
