<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gov.va.api.health</groupId>
    <artifactId>test-starter</artifactId>
    <version>6.0.9</version>
    <relativePath/>
  </parent>
  <artifactId>community-care-eligibility-tests</artifactId>
  <version>2.0.46</version>
  <packaging>jar</packaging>
  <properties>
    <docker.imageName>community-care-tests</docker.imageName>
    <mock-ee.version>2.0.28</mock-ee.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>mock-ee</artifactId>
      <version>${mock-ee.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>community-care-eligibility-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>community-care-eligibility-mock-services</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>community-care-eligibility</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <!--
    Launch process for services
  -->
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-applications</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <includeArtifactIds>junit-platform-console-standalone,mock-ee,community-care-eligibility-mock-services,community-care-eligibility</includeArtifactIds>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>process-exec-maven-plugin</artifactId>
        <version>${process-exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>mock-ee-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>mock-ee</name>
              <healthcheckUrl>http://localhost:9090/actuator/health</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <processLogFile>${project.build.directory}/mock-ee.log</processLogFile>
              <waitForInterrupt>false</waitForInterrupt>
              <arguments>
                <argument>java</argument>
                <argument>-jar</argument>
                <argument>mock-ee.jar</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>mock-services-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>mock-services</name>
              <healthcheckUrl>http://localhost:8666/help</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <processLogFile>${project.build.directory}/mock-services.log</processLogFile>
              <waitForInterrupt>false</waitForInterrupt>
              <arguments>
                <argument>java</argument>
                <argument>-jar</argument>
                <argument>community-care-eligibility-mock-services.jar</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>community-care-eligibility-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>community-care-eligibility</name>
              <healthcheckUrl>http://localhost:8090/actuator/health</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <!--
              <processLogFile>${project.build.directory}/community-care-eligibility.log</processLogFile>
              -->
              <arguments>
                <argument>java</argument>
                <argument>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5085</argument>
                <argument>-cp</argument>
                <argument>community-care-eligibility.jar</argument>
                <argument>-Dee.endpoint.url=http://localhost:9090/v0/ws</argument>
                <argument>-Dloader=gov.va.api.health.communitycareeligibility.service.Application</argument>
                <argument>-Dlogging.level.root=INFO</argument>
                <argument>-Dspring.config.location=classpath:/application.properties,file:${project.basedir}/config/secrets.properties</argument>
                <argument>-Dva-facilities.url=http://localhost:8666</argument>
                <argument>org.springframework.boot.loader.PropertiesLauncher</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>stop-all</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-all</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>deploy-test</id>
                <configuration>
                  <images>
                    <image>
                      <name>${docker.organization}/${docker.imageName}</name>
                      <build>
                        <dockerFile>Dockerfile</dockerFile>
                        <tags>
                          <tag>${project.version}</tag>
                          <tag>${docker.tag}</tag>
                        </tags>
                      </build>
                    </image>
                  </images>
                </configuration>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
